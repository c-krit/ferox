#
# Copyright (c) 2021-2024 Jaedeok Kim <jdeokkim@protonmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

# ============================================================================>

PROJECT_NAME = ferox
PROJECT_FULL_NAME = c-krit/ferox

LOG_PREFIX = $(PROJECT_FULL_NAME):

# ============================================================================>

INCLUDE_PATH = include
LIBRARY_PATH = lib
SOURCE_PATH = src

OBJECTS = \
	$(SOURCE_PATH)/broad-phase.obj  \
	$(SOURCE_PATH)/collision.obj    \
	$(SOURCE_PATH)/geometry.obj     \
	$(SOURCE_PATH)/rigid-body.obj   \
	$(SOURCE_PATH)/timer.obj        \
	$(SOURCE_PATH)/world.obj

TARGETS = $(LIBRARY_PATH)/$(PROJECT_NAME).lib

# ============================================================================>

CC = cl
AR = lib
CFLAGS = /I $(INCLUDE_PATH) /nologo /O2 /std:c11 /utf-8 /Zi
LDFLAGS = /DEBUG

# ============================================================================>

all: pre-build build post-build

pre-build:
	@echo $(LOG_PREFIX) Using: '$(CC)' and '$(AR)' to build this project.
	
build: $(TARGETS)

.c.obj:
	@echo $(LOG_PREFIX) Compiling: $@ (from $<)
	$(CC) /c $< /Fo"$@" $(CFLAGS) $(LDFLAGS) $(LDLIBS) > nul 2>&1

# https://learn.microsoft.com/en-us/cpp/build/reference/managing-a-library

$(TARGETS): $(OBJECTS)
	@if not exist $(LIBRARY_PATH) mkdir $(LIBRARY_PATH)
	@echo $(LOG_PREFIX) Linking: $(TARGETS)
	@$(AR) $(OBJECTS) /OUT:$(TARGETS) > nul 2>&1

post-build:
	@echo $(LOG_PREFIX) Build complete. && echo;

# ============================================================================>

rebuild: clean all

# ============================================================================>

clean:
	@echo $(LOG_PREFIX) Cleaning up. && echo;
	@if exist $(LIBRARY_PATH)\*.lib del /Q /S $(LIBRARY_PATH)\*.lib > nul 2>&1
	@if exist $(SOURCE_PATH)\*.obj del /Q /S $(SOURCE_PATH)\*.obj > nul 2>&1

# ============================================================================>
